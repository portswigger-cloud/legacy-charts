name: Test and Release helm-charts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Debug - List chart directories
        run: |
          echo "Current directory:"
          pwd
          echo "Contents of bitnami directory:"
          ls -la bitnami/
          echo "Sample chart directory (airflow):"
          ls -la bitnami/airflow/
          echo "Chart.yaml exists?"
          test -f bitnami/airflow/Chart.yaml && echo "Yes" || echo "No"

      - name: Setup Helmfile
        uses: mamezou-tech/setup-helmfile@v1.2.0
        with:
          helmfile-version: "v0.150.0"
          helm-version: "v3.11.0"
          kubectl-version: "1.24.7"
          kubectl-release-date: "2022-10-31"
#          additional-helm-plugins: >-
#            https://github.com/helm-unittest/helm-unittest
#
#      - name: Lint
#        run: helm lint bitnami/*/
#
#      - name: Test
#        run: helm unittest --strict bitnami/*/

      - name: Package subcharts manually
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          # Package kube-prometheus-crds subchart manually
          if [ -d "bitnami/kube-prometheus/charts/kube-prometheus-crds" ]; then
            echo "Packaging kube-prometheus-crds subchart..."
            mkdir -p .cr-release-packages
            helm package bitnami/kube-prometheus/charts/kube-prometheus-crds --destination .cr-release-packages
            echo "âœ… kube-prometheus-crds packaged successfully"
          fi

      - name: Run chart-releaser
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: bitnami
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
